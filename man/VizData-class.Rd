% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VizData-class.R
\docType{class}
\name{VizData-class}
\alias{VizData-class}
\alias{VizData}
\alias{show,VizData-method}
\alias{initialize,VizData-method}
\alias{[,VizData,ANY,ANY,ANY-method}
\title{VizData class}
\usage{
\S4method{show}{VizData}(object)

\S4method{initialize}{VizData}(
  .Object,
  qdata = matrix(),
  metacell = data.frame(),
  metadata = data.frame(),
  colID = "",
  proteinID = "",
  conds = "",
  type = "",
  adjMat = data.frame(),
  cc = list()
)

\S4method{[}{VizData,ANY,ANY,ANY}(x, i, j = NA, k = NA, l = NA, ..., drop)
}
\arguments{
\item{object}{An instance of the class \code{VizData}}

\item{.Object}{xxx}

\item{qdata}{xxx}

\item{metacell}{xxx}

\item{metadata}{xxx}

\item{colID}{xxx}

\item{proteinID}{xxx}

\item{conds}{xxx}

\item{type}{xxx}

\item{adjMat}{xxx}

\item{cc}{xxx}

\item{x}{An instance of class \link{QFeatures}.}

\item{i}{\code{character()}, \code{integer()}, \code{logical()} or \code{GRanges()}
object for subsetting by rows.}

\item{j}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by \code{colData} rows.}

\item{k}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by assays}

\item{l}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by assays}

\item{...}{Additional parameters}

\item{drop}{logical (default \code{TRUE}) whether to drop empty assay
elements in the \code{ExperimentList}.}
}
\value{
See individual method description for the return value.

An instance of class \code{VizData}

An instance of the class \code{VizData}

NA

An instance of the class \code{VizData}

NA
}
\description{
Conceptually, a \code{VizData} object is a standard representation of all
elements from quantitative other structured data used in proteomics, such
as \code{MSnset}, \code{QFeatures}, \code{SummarizedExperiment} or \code{MultAssayExperiment}.
It allows to use it as a generic converter.

\code{VizData} objects are not usually created by hand but are created from
the \code{VizList} which is the class accessible by the user.

The recommended way to create \code{VizData} objects is the use the
function \code{convert2viz()} of the class \code{VizList}
}
\section{Slots}{

\describe{
\item{\code{qdata}}{A matrix containing the quantitative data}

\item{\code{metacell}}{A matrix of xxx}

\item{\code{metadata}}{A matrix of xxxx}

\item{\code{colID}}{The name of the column which contains the ids of each row.}

\item{\code{proteinID}}{The name of the column in the metadata which represent the
(unique) id of the protein}

\item{\code{conds}}{A vector of the names of the condition of each sample
of the dataset}

\item{\code{type}}{The type of entity in the dataset (peptide, protein, ...)}

\item{\code{adjMat}}{xxx}

\item{\code{cc}}{A list of xxx}
}}

\examples{
## ------------------------
## An empty VizData object
## ------------------------

VizData()

## -----------------------------------
## Creating a VizData object manually
## -----------------------------------

qdata <- matrix(1:30, ncol = 6, 
dimnames = list(paste0('prot_', 1:5), 
c(paste0('C1_R', 1:3), paste0('C2_R', 1:3))))
colnames(qdata) <- c(paste0('C1_R', 1:3), paste0('C2_R', 1:3))
metacell <- data.frame(matrix(rep('Missing POV', 30), ncol = 6), 
row.names = paste0('prot_', 1:5))
colnames(metacell) <- c(paste0('metacell_C1_R', 1:3), 
paste0('metacell_C2_R', 1:3))
metadata <- data.frame(protID = paste0('proteinID_', 1:5),
metadata1 = paste0('meta1_', 1:5),
metadata2 = paste0('meta2_', 1:5))
conds <- c(rep('C1', 3), rep('C2', 3))
colID <- 'protID'
proteinId <- 'protID'
type <- "protein"
adjMat <- matrix()
cc <- list()

obj <- VizData(qdata, metacell, metadata, colID, proteinId, type)

}
\seealso{
The \code{VizData()} constructor and the \code{convert2VizList()}
function. The \emph{omXplore} vignette provides an extended example.
}
\author{
Samuel Wieczorek
}
